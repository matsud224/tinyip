/*
 *  $Id: sample1.cfg 2416 2012-09-07 08:06:20Z ertl-hiro $
 */

/*
 *  system configuration file
 */

INCLUDE("target_timer.cfg");
INCLUDE("syssvc/syslog.cfg");
INCLUDE("syssvc/banner.cfg");
INCLUDE("syssvc/serial.cfg");
INCLUDE("syssvc/logtask.cfg");

INCLUDE("../mbed-lib/common/common.cfg");
INCLUDE("../mbed-lib/EthernetInterface/EthernetInterface.cfg");
INCLUDE("../mbed-lib/HttpServer_snapshot/HttpServer.cfg");

#include "arduino_app.h"

CRE_CYC(CYCHDR1, { TA_NULL, 0, cyclic_handler, 2000, 1 });
CRE_CYC(TIMEOUT_10SEC_CYC, { TA_NULL, 0, timeout_10sec_cyc, 10000, 1 });
CRE_CYC(TCP_TIMER_CYC, { TA_NULL, 0, tcp_timer_cyc, 200, 1 });
CRE_CYC(TCP_SEND_CYC, { TA_NULL, 0, tcp_send_cyc, 50, 1 });

CRE_TSK(TCP_SEND_TASK, { TA_NULL, 0, tcp_send_task, TCP_SEND_TASK_PRI, TCP_SEND_TASK_STACK_SIZE, NULL });
CRE_TSK(TCP_TIMER_TASK, { TA_NULL, 0, tcp_timer_task, TCP_TIMER_TASK_PRI, TCP_TIMER_TASK_STACK_SIZE, NULL });
CRE_TSK(TIMEOUT_10SEC_TASK, { TA_NULL, 0, timeout_10sec_task, TIMEOUT_10SEC_TASK_PRI, TIMEOUT_10SEC_TASK_STACK_SIZE, NULL });
CRE_TSK(MAIN_TASK, { TA_ACT, 0, main_task, MAIN_TASK_PRI, MAIN_TASK_STACK_SIZE, NULL });
CRE_TSK(ETHERRECV_TASK, { TA_NULL, 0, etherrecv_task, ETHERRECV_TASK_PRI, ETHERRECV_TASK_STACK_SIZE, NULL });
CRE_TSK(HTTPD_TASK, { TA_NULL, 0, httpd_task, HTTPD_TASK_PRI, HTTPD_TASK_STACK_SIZE, NULL });
CRE_TSK(USER_TASK, { TA_ACT, 0, user_task, USER_TASK_PRI, USER_TASK_STACK_SIZE, NULL });
CRE_TSK(MORSE_TASK, { TA_NULL, 0, morse_task, MORSE_TASK_PRI, MORSE_TASK_STACK_SIZE, NULL });
CRE_TSK(DHCLIENT_TASK, { TA_NULL, 0, dhclient_task, DHCLIENT_TASK_PRI, DHCLIENT_TASK_STACK_SIZE, NULL });

CRE_SEM(ETHERIO_SEM, { TA_NULL, 1, 1 });
CRE_SEM(IPID_SEM, { TA_NULL, 1, 1 });
CRE_SEM(ETHERRECV_SEM, { TA_NULL, 1, 255 });
CRE_SEM(TIMEOUT_10SEC_SEM, { TA_NULL, 1, 1 });
CRE_SEM(ARPTBL_SEM, { TA_NULL, 1, 1 });
CRE_SEM(SOCKTBL_SEM, { TA_NULL, 1, 1 });
CRE_SEM(UDP_SEM, { TA_NULL, 1, 1 });
CRE_SEM(UDP_RECV_SEM, { TA_NULL, 1, 1 });
CRE_SEM(TCP_SEM, { TA_NULL, 1, 1 });
CRE_SEM(PORTNO_SEM, { TA_NULL, 1, 1 });

CRE_FLG(BUTTON_FLG, { TA_CLR, 0x00 });
CRE_FLG(DHCLIENT_ALM_FLG, { TA_CLR, 0x00 });

CRE_DTQ(INPUTCHAR_DTQ, { TA_NULL, 64, NULL });

CRE_ALM(DHCLIENT_ALM, { TA_NULL, NULL, dhclient_alarm_handler });

DEF_KMM({ KMM_SIZE, NULL });
